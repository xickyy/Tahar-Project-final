{"ast":null,"code":"var _jsxFileName = \"/home/ricky/TaharGarage/garage-door-site/src/components/ReviewFetcher/index.js\",\n  _s = $RefreshSig$();\nimport './ReviewFetcher.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleReviews = () => {\n  _s();\n  const [reviews, setReviews] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    const backendUrl = 'http://localhost:8000/google-reviews';\n    fetch(backendUrl).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Fetched data:', data); // Log the response data\n      setReviews(data);\n    }).catch(error => {\n      console.error('Error fetching reviews:', error); // Log any errors\n    });\n  }, []);\n  console.log('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%', reviews);\n  if (isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Google Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: reviews.map((review, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [review.author_name, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), \" \", review.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n  ;\n};\n_s(GoogleReviews, \"huJvY7iJf4OwlgMW0dihJLdRm3o=\");\n_c = GoogleReviews;\nexport default GoogleReviews;\nvar _c;\n$RefreshReg$(_c, \"GoogleReviews\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GoogleReviews","_s","reviews","setReviews","isLoaded","setIsLoaded","backendUrl","fetch","then","response","ok","Error","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","review","index","author_name","text","_c","$RefreshReg$"],"sources":["/home/ricky/TaharGarage/garage-door-site/src/components/ReviewFetcher/index.js"],"sourcesContent":["import './ReviewFetcher.css';\n\nimport React, { useState, useEffect } from 'react';\n\nconst GoogleReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false)\n\n  useEffect(() => {\n    const backendUrl = 'http://localhost:8000/google-reviews';\n\n    fetch(backendUrl)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log('Fetched data:', data); // Log the response data\n        setReviews(data);\n      })\n      .catch((error) => {\n        console.error('Error fetching reviews:', error); // Log any errors\n      });\n  }, []);\n\n  console.log('%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%',reviews)\n\n  if(isLoaded) {\n    return (\n      <div>\n        <h2>Google Reviews</h2>\n        <ul>\n          {reviews.map((review, index) => (\n            <li key={index}>\n              <strong>{review.author_name}:</strong> {review.text}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  };\n  }\n\nexport default GoogleReviews;\n"],"mappings":";;AAAA,OAAO,qBAAqB;AAE5B,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,sCAAsC;IAEzDC,KAAK,CAACD,UAAU,CAAC,CACdE,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC,CAAC,CAAC;MACpCV,UAAU,CAACU,IAAI,CAAC;IAClB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENH,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAACb,OAAO,CAAC;EAE3D,IAAGE,QAAQ,EAAE;IACX,oBACEL,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBvB,OAAA;QAAAmB,QAAA,EACGhB,OAAO,CAACqB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzB1B,OAAA;UAAAmB,QAAA,gBACEnB,OAAA;YAAAmB,QAAA,GAASM,MAAM,CAACE,WAAW,EAAC,GAAC;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACE,MAAM,CAACG,IAAI;QAAA,GAD5CF,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEV;EAAC;AACD,CAAC;AAAArB,EAAA,CAvCGD,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}