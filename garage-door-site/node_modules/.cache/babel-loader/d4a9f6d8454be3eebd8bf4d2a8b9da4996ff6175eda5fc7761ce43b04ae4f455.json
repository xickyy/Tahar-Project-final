{"ast":null,"code":"var _jsxFileName = \"/home/ricky/TaharGarage/garage-door-site/src/context/Modal.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useRef, useState, useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModalContext = /*#__PURE__*/React.createContext();\nexport function ModalProvider({\n  children\n}) {\n  _s();\n  const modalRef = useRef();\n  const [modalContent, setModalContent] = useState(null);\n  // callback function that will be called when modal is closing\n  const [onModalClose, setOnModalClose] = useState(null);\n  const closeModal = () => {\n    setModalContent(null); // clear the modal contents\n    // If callback function is truthy, call the callback function and reset it\n    // to null:\n    if (typeof onModalClose === 'function') {\n      setOnModalClose(null);\n      onModalClose();\n    }\n  };\n  const contextValue = {\n    modalRef,\n    // reference to modal div\n    modalContent,\n    // React component to render inside modal\n    setModalContent,\n    // function to set the React component to render inside modal\n    setOnModalClose,\n    // function to set the callback function called when modal is closing\n    closeModal // function to close the modal\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: modalRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ModalProvider, \"GC6yKhmP9m6t4UHFT/8HQv8BUts=\");\n_c = ModalProvider;\nexport function Modal() {\n  _s2();\n  const {\n    modalRef,\n    modalContent,\n    closeModal\n  } = useContext(ModalContext);\n  // If there is no div referenced by the modalRef or modalContent is not a\n  // truthy value, render nothing:\n  if (!modalRef || !modalRef.current || !modalContent) return null;\n\n  // Render the following component to the div referenced by the modalRef\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"modal-background\",\n      onClick: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-\",\n        id: \"clearBtn\",\n        onClick: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), modalContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this), modalRef.current);\n}\n_s2(Modal, \"vjTmSxTO2jj2tX9ficQqXOAPCzM=\");\n_c2 = Modal;\nexport const useModal = () => {\n  _s3();\n  return useContext(ModalContext);\n};\n_s3(useModal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c, _c2;\n$RefreshReg$(_c, \"ModalProvider\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"names":["React","useRef","useState","useContext","ReactDOM","jsxDEV","_jsxDEV","Fragment","_Fragment","ModalContext","createContext","ModalProvider","children","_s","modalRef","modalContent","setModalContent","onModalClose","setOnModalClose","closeModal","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","Modal","_s2","current","createPortal","id","onClick","className","_c2","useModal","_s3","$RefreshReg$"],"sources":["/home/ricky/TaharGarage/garage-door-site/src/context/Modal.js"],"sourcesContent":["import React, { useRef, useState, useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nconst ModalContext = React.createContext();\n\nexport function ModalProvider({ children }) {\n  const modalRef = useRef();\n  const [modalContent, setModalContent] = useState(null);\n  // callback function that will be called when modal is closing\n  const [onModalClose, setOnModalClose] = useState(null);\n\n  const closeModal = () => {\n    setModalContent(null); // clear the modal contents\n    // If callback function is truthy, call the callback function and reset it\n    // to null:\n    if (typeof onModalClose === 'function') {\n      setOnModalClose(null);\n      onModalClose();\n    }\n  };\n\n  const contextValue = {\n    modalRef, // reference to modal div\n    modalContent, // React component to render inside modal\n    setModalContent, // function to set the React component to render inside modal\n    setOnModalClose, // function to set the callback function called when modal is closing\n    closeModal // function to close the modal\n  };\n\n  return (\n    <>\n      <ModalContext.Provider value={contextValue}>\n        {children}\n      </ModalContext.Provider>\n      <div ref={modalRef} />\n    </>\n  );\n}\n\nexport function Modal() {\n  const { modalRef, modalContent, closeModal } = useContext(ModalContext);\n  // If there is no div referenced by the modalRef or modalContent is not a\n  // truthy value, render nothing:\n  if (!modalRef || !modalRef.current || !modalContent) return null;\n\n  // Render the following component to the div referenced by the modalRef\n  return ReactDOM.createPortal(\n    <div id=\"modal\">\n      <div id=\"modal-background\" onClick={closeModal} />\n      <div id=\"modal-content\">\n      <i className=\"fa-solid fa-\" id='clearBtn' onClick={closeModal}></i>\n        {modalContent}\n      </div>\n    </div>,\n    modalRef.current\n  );\n}\n\nexport const useModal = () => useContext(ModalContext);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}